name: Docker container build
on: push

env:
  DOCKER_REGISTRY: ghcr.io
  DOCKER_NAME: ghcr.io/${{ github.repository }}
  PLATFORMS: linux/amd64,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x

jobs:
  build:
    name: Build and publish Docker container
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@master

      - name: Use branch name as Docker tag
        if: startsWith(github.ref, 'refs/heads')
        run: |
          echo "Using branch name as docker tag"
          echo "DOCKER_TAG=$(echo ${GITHUB_REF} | sed -e "s/refs\/heads\///g" | sed -e "s/\//./g")" >> $GITHUB_ENV

      - name: Use 'latest' as Docker tag
        if: github.ref == 'refs/heads/master'
        run: |
          echo "Using latest as docker tag"
          echo "DOCKER_TAG=latest" >> $GITHUB_ENV

      - name: Use tag name as Docker tag
        if: startsWith(github.ref, 'refs/tags')
        run: |
          echo "Using git tag as docker tag"
          echo "DOCKER_TAG=$(echo ${GITHUB_REF} | sed -e "s/refs\/tags\///g")" >> $GITHUB_ENV

      - name: Print docker image and tag name
        run: |
          echo "Continuing to build ${DOCKER_NAME}:${DOCKER_TAG}"

      - name: Log in to Docker Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ${DOCKER_REGISTRY} -u ${{ github.actor }} --password-stdin

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Build the Docker builder image
        run: |
          docker buildx build \
            --cache-from "type=registry,ref=${DOCKER_NAME}-builder:latest" \
            --cache-from "type=registry,ref=${DOCKER_NAME}-builder:${DOCKER_TAG}" \
            --cache-to   "type=registry,ref=${DOCKER_NAME}-builder:${DOCKER_TAG}" \
            --target builder \
            --platform ${PLATFORMS} \
            .

      - name: Build the Docker test image (default platform only)
        run: |
          docker buildx build \
            --cache-from "type=registry,ref=${DOCKER_NAME}-builder:latest" \
            --cache-from "type=registry,ref=${DOCKER_NAME}-builder:${DOCKER_TAG}" \
            --cache-from "type=registry,ref=${DOCKER_NAME}-test:latest" \
            --cache-from "type=registry,ref=${DOCKER_NAME}-test:${DOCKER_TAG}" \
            --cache-to   "type=registry,ref=${DOCKER_NAME}-test:${DOCKER_TAG}" \
            --target test \
            .

      - name: Build the Docker image
        run: |
          docker buildx build \
            --cache-from "type=registry,ref=${DOCKER_NAME}-builder:latest" \
            --cache-from "type=registry,ref=${DOCKER_NAME}-builder:${DOCKER_TAG}" \
            --cache-from "type=registry,ref=${DOCKER_NAME}:latest" \
            --cache-from "type=registry,ref=${DOCKER_NAME}:${DOCKER_TAG}" \
            --tag ${DOCKER_NAME}:${DOCKER_TAG} \
            --platform ${PLATFORMS} \
            --push \
            .
